devtools::install_github("therbootcamp/BaselRBootcamp2017")
library(BaselRBootcamp2017)
library(BaselRBootcamp2017)
getwd()
jeapardy <- read.table("~/Downloads/jeopardy.txt")
jeapardy <- read.table("~/Downloads/jeopardy.txt", sep = "\t")
jeapardy <- read.table("~/Downloads/jeopardy.txt", sep = "\t")
jeapardy <- read.table("~/Downloads/jeopardyf.txt", sep = "\t")
jeapardy <- read.table("~/Downloads/jeopardy.txt", sep = "\t")
jeapardy <- read.table("~/Downloads/jeopardy.txt", sep = "\t", header = TRUE)
head(jeopardy)
jeapardy <- read.table("~/Downloads/jeopardy.txt", sep = "\t", header = TRUE)
jeapardy <- read.table("~/Downloads/jeopardy.txt", sep = "\t", header = TRUE)
jeapardy <- read.table("~/Downloads/jeopardy.txt", sep = "\t", header = TRUE)
jeapardy <- read.table("~/Downloads/jeopardy.txt", sep = "\t", header = TRUE)
jeapardy <- read.table("~/Downloads/jeopardy.txt", sep = "\t", header = TRUE)
library(readr)
x <- read.delim("~/Downloads/jeopardy.txt")
dim(x)
head(x)
hist(x$value)
str(x)
?as.Date
x$value <- as.numeric(x$value)
str(x)
x <- read.delim("~/Downloads/jeopardy.txt")
x <- read.delim("~/Downloads/jeopardy.txt", stringsAsFactors = FALSE)
str(x)
x$value <- as.numeric(x$value)
head(x)
x$airdate <- as.Date(x$airdate)
head(x)
x$airdate <- as.Date(x$airdate, format = "%d.%m.%Y")
head(x)
hist(x$airdate)
plot(x$airdate)
dim(x)
head(x)
jeopardy_full <- jeopardy
jeopardy_full <- x
jeopardy <- jeopardy_full[sample(nrow(jeopardy_full), size = 5000),]
save(jeopardy, "data/jeopardy.RData")
getwd()
save(jeopardy, file = "data/jeopardy.RData")
save(jeopardy_full, file = "data/jeopardy_full.RData")
install.packages("speff2trial")
library("speff2trial")
head(ACTG175)
?ACTG175
?include_graphics
devtools::install_github("therbootcamp/BaselRBootcamp2017")
library(BaselRBootcamp2017)
?ACTG175
head(ACTG175)
dim(ACTG175)
install.packages("googleVis")
?googleVis
library("googleVis", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
Stock
dim(Stock)
install.packages("WDI")
library(WDI)
WDI(country="all", indicator=c("AG.AGR.TRAC.NO","TM.TAX.TCOM.BC.ZS"),
start=1990, end=2000)
wdi <- WDI(country = "all", indicator = "NY.GNS.ICTR.GN.ZS",
start = 2005, end = 2011, extra = FALSE, cache = NULL)
dim(wdi)
wdi
names(wdi)
head(wdi)
with(wdi, table(country))
length(with(wdi, table(country)))
"California" %in% names(with(wdi, table(country)))
WDIsearch()
head(WDIsearch())
dim(WDIsearch())
View(WDIsearch())
indicators <- WDIsearch()
names(indicators)
class(indicators)
indicators <- as.data.frame(WDIsearch())
names(indicators)
indicators <- as.data.frame(WDIsearch())
indicators <- indicators[indicators$indicator == c("BN.GSR.FCTY.CD.ZS",
"CM.MKT.TRAD.GD.ZS",
"EN.ATM.CO2E.PP.GD",
"FI.RES.TOTL.CD.ZS",
"GC.DOD.TOTL.GD.ZS",
"MS.MIL.XPND.GD.ZS",
"NY.GDP.DEFL.KD.ZG",
"NY.GDP.PCAP.CD",
"SH.XPD.TOTL.ZS",
)]
wdi <- WDI(country = "all", indicator = "NY.GNS.ICTR.GN.ZS",
start = 2005, end = 2011, extra = FALSE, cache = NULL)
indicators <- as.data.frame(WDIsearch())
indicators <- indicators[indicators$indicator == c("BN.GSR.FCTY.CD.ZS",
"CM.MKT.TRAD.GD.ZS",
"EN.ATM.CO2E.PP.GD",
"FI.RES.TOTL.CD.ZS",
"GC.DOD.TOTL.GD.ZS",
"MS.MIL.XPND.GD.ZS",
"NY.GDP.DEFL.KD.ZG",
"NY.GDP.PCAP.CD",
"SH.XPD.TOTL.ZS"
),]
indicators <- indicators[indicators$indicator %in% c("BN.GSR.FCTY.CD.ZS",
"CM.MKT.TRAD.GD.ZS",
"EN.ATM.CO2E.PP.GD",
"FI.RES.TOTL.CD.ZS",
"GC.DOD.TOTL.GD.ZS",
"MS.MIL.XPND.GD.ZS",
"NY.GDP.DEFL.KD.ZG",
"NY.GDP.PCAP.CD",
"SH.XPD.TOTL.ZS"
),]
head(indicators)
indicators$indicator
indicators <- indicators[paste(indicators$indicator) %in% c("BN.GSR.FCTY.CD.ZS",
"CM.MKT.TRAD.GD.ZS",
"EN.ATM.CO2E.PP.GD",
"FI.RES.TOTL.CD.ZS",
"GC.DOD.TOTL.GD.ZS",
"MS.MIL.XPND.GD.ZS",
"NY.GDP.DEFL.KD.ZG",
"NY.GDP.PCAP.CD",
"SH.XPD.TOTL.ZS"
),]
paste(indicators$indicator) %in% c("BN.GSR.FCTY.CD.ZS",
"CM.MKT.TRAD.GD.ZS",
"EN.ATM.CO2E.PP.GD",
"FI.RES.TOTL.CD.ZS",
"GC.DOD.TOTL.GD.ZS",
"MS.MIL.XPND.GD.ZS",
"NY.GDP.DEFL.KD.ZG",
"NY.GDP.PCAP.CD",
"SH.XPD.TOTL.ZS"
)
paste(indicators$indicator)
wdi <- WDI(country = "all", indicator = "NY.GNS.ICTR.GN.ZS",
start = 2005, end = 2011, extra = FALSE, cache = NULL)
indicators <- as.data.frame(WDIsearch())
indicators
paste(indicators$indicator)
paste(indicators$indicator) %in% c("BN.GSR.FCTY.CD.ZS",
"CM.MKT.TRAD.GD.ZS",
"EN.ATM.CO2E.PP.GD",
"FI.RES.TOTL.CD.ZS",
"GC.DOD.TOTL.GD.ZS",
"MS.MIL.XPND.GD.ZS",
"NY.GDP.DEFL.KD.ZG",
"NY.GDP.PCAP.CD",
"SH.XPD.TOTL.ZS"
)
indicators[paste(indicators$indicator) %in% c("BN.GSR.FCTY.CD.ZS",
"CM.MKT.TRAD.GD.ZS",
"EN.ATM.CO2E.PP.GD",
"FI.RES.TOTL.CD.ZS",
"GC.DOD.TOTL.GD.ZS",
"MS.MIL.XPND.GD.ZS",
"NY.GDP.DEFL.KD.ZG",
"NY.GDP.PCAP.CD",
"SH.XPD.TOTL.ZS"
),]
wdi <- WDI(country = "all", indicator = "NY.GNS.ICTR.GN.ZS",
start = 2005, end = 2011, extra = FALSE, cache = NULL)
indicators <- as.data.frame(WDIsearch())
indicators <- indicators[paste(indicators$indicator) %in% c("BN.GSR.FCTY.CD.ZS",
"CM.MKT.TRAD.GD.ZS",
"EN.ATM.CO2E.PP.GD",
"FI.RES.TOTL.CD.ZS",
"GC.DOD.TOTL.GD.ZS",
"MS.MIL.XPND.GD.ZS",
"NY.GDP.DEFL.KD.ZG",
"NY.GDP.PCAP.CD",
"SH.XPD.TOTL.ZS"
),]
indicators
indicators$short <- c("income", "stocks", "co2", "reserves", "debt", "military", "inflation", "gdp", "health")
wdi <- WDI(country = "all",
indicator = indicators$indicator,
start = 2000,
end = 2011,
extra = FALSE,
cache = NULL)
head(wdi)
str(wdi)
hist(wdi$EN.ATM.CO2E.PP.GD)
head(wdi)
table(wdi$country)
wdi <- WDI(country = "all", indicator = "NY.GNS.ICTR.GN.ZS",
start = 2005, end = 2011, extra = FALSE, cache = NULL)
indicators <- as.data.frame(WDIsearch())
indicators <- indicators[paste(indicators$indicator) %in% c("BN.GSR.FCTY.CD.ZS",
"CM.MKT.TRAD.GD.ZS",
"EN.ATM.CO2E.PP.GD",
"FI.RES.TOTL.CD.ZS",
"GC.DOD.TOTL.GD.ZS",
"MS.MIL.XPND.GD.ZS",
"NY.GDP.DEFL.KD.ZG",
"NY.GDP.PCAP.CD",
"SH.XPD.TOTL.ZS"
),]
indicators$short <- c("income", "stocks", "co2", "reserves", "debt", "military", "inflation", "gdp", "health")
wdi <- WDI(country = "all",
indicator = indicators$indicator,
start = 1980,
end = 2011,
extra = FALSE,
cache = NULL)
head(wdi)
knitr::kable(head(ChickWeight))
head(ChickWeight)
library(dplyr)
x <- ChickWeight %>%
group_by(Diet) %>%
summarise(
weight.mean = mean(weight)
)
x
head(ChickWeight)
?tidyr
library(dplyr)
ChickWeight %>%           # Start with the ChickWeight data
group_by(Diet) %>%      # Group the data by Diet
summarise(              # Now summarise....
weight.mean = mean(weight), # Mean weight
time.max = max(time),       # Max time
N = n()                     # Number of observations
)
ChickWeight %>%           # Start with the ChickWeight data
group_by(Diet) %>%
summarise(              # Now summarise....
weight.mean = mean(weight), # Mean weight
time.max = max(time),       # Max time
N = n()                     # Number of observations
)
ChickWeight %>%           # Start with the ChickWeight data
group_by(Diet)
library(dplyr)
ChickWeight %>%           # Start with the ChickWeight data
group_by(Diet) %>%      # Group the data by Diet
summarise(              # Now summarise....
weight.mean = mean(weight), # Mean weight
time.max = max(Time),       # Max time
N = n()                     # Number of observations
)
ChickWeight %>%           # Start with the ChickWeight data
weight.mean = mean(weight) # Mean weight
library(dplyr)
ChickWeight %>%           # Start with the ChickWeight data
mutate(
weight_d_time = weight / Time
) %>% head()
# Give me a random sample of 10 rows
ChickWeight %>% select(Chick, weight) %>%
sample_n(10)
time_agg <- ChickWeight %>%
group_by(Time) %>%
summarise(
weight.mean = mean(weight)
)
time_agg
time_agg <- ChickWeight %>%
group_by(Time) %>%
summarise(
weight.mean = mean(weight)
)
time_agg
time_agg <- ChickWeight %>%
group_by(Time) %>%
summarise(
weight.mean = mean(weight)
)
time_agg
ggplot(time_agg, aes(weight.mean)) + geom_bar()
library(ggplot2)
ggplot(time_agg, aes(weight.mean)) + geom_bar()
ggplot(time_agg, aes(Time, weight.mean)) + geom_bar()
ggplot(time_agg, aes(Time, weight.mean)) + geom_bar(stat = "identity")
library(ggplot2)
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_bar(stat = "identity")
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_bar(stat = "identity", color = "blue")
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_bar(stat = "identity", color = "blue", fill = "blue")
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_bar(stat = "identity", color = "blue", fill = c("red", "blue"))
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_bar(stat = "identity", color = "blue", fill = "gray")
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_bar(stat = "identity", color = "white", fill = "gray")
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_bar(stat = "identity", color = "white", fill = "black")
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_bar(stat = "identity", color = "white", fill = "darkgray")
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_bar(stat = "identity", color = "white", fill = "darkgray") +
geom_line(stat = "identity")
ggplot(ChickWeight,
aes(Time, weight)) +
geom_bar(stat = "mean", color = "white", fill = "darkgray") +
geom_line(stat = "identity")
ggplot(ChickWeight,
aes(Time, weight)) +
geom_bar(stat = "mean", color = "white", fill = "darkgray") +
geom_line(stat = "identity")
ggplot(ChickWeight,
aes(Time, weight)) +
geom_bar(stat = mean, color = "white", fill = "darkgray") +
geom_line(stat = "identity")
ggplot(ChickWeight,
aes(Time, weight)) +
geom_bar(stat = mean, color = "white", fill = "darkgray") +
geom_line(stat = "identity")
ggplot(ChickWeight,
aes(Time, weight)) +
geom_bar(stat = mean, color = "white")
library(ggplot2)
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_line(stat = "identity", color = "blue")
library(ggplot2)
ggplot(time_agg,
aes(Time, weight.mean, size= 2)) +
geom_line(stat = "identity", color = "blue")
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_line(stat = "identity", color = "blue", size = 2)
library(ggplot2)
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_line(stat = "identity",
color = "blue",
size = 2) +
labs(x = "blah")
library(ggplot2)
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_line(stat = "identity",
color = "blue",
size = 2) +
labs(x = "Time", y = "Mean Weight")
library(ggplot2)
ggplot(time_agg,
aes(Time, weight.mean)) +
geom_line(stat = "identity",
color = "blue",
size = 2) +
labs(x = "Time", y = "Mean Weight", title = "My Cool Plot")
head(ChickWeight)
library(tidyr)
library(dplyr)
?spread
library(dplyr)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocksm <- stocks %>% gather(stock, price, -time)
head(stocksm)
x <- stocksm %>% spread(stock, price)
x
library(tidyr)
library(dplyr)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocksm <- stocks %>% gather(stock, price, -time)
stocksm
stocksm$new <- rnorm(nrow(stocksm))
library(tidyr)
library(dplyr)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocksm <- stocks %>% gather(stock, price, -time)
stocksm$new <- rnorm(nrow(stocksm))
x <- stocksm %>% spread(stock, price)
x
library(tidyr)
library(dplyr)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocksm <- stocks %>% gather(stock, price, -time)
socksm
stocksm
stocksm %>% spread(stock, price)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocks %>% gather(stock, price, -time)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocksm <- stocks %>% gather(stock, price)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocksm <- stocks %>% gather(stock, price, -time)
stocksm
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
stocks %>% gather(stock, price, -time)
head(ACTG175)
dim(ACTG175)
?ACTG175
hist(ACTG175$days)
hist(ACTG175$age, ACTG175$days)
plot(ACTG175$age, ACTG175$days)
head(ACTG175)
ACTG175$age_months <- ACTG175 %>% mutate(
age_months = age * 12
)
ACTG175$karnof_b <- ACTG175 %>%
mutate(
karnof_b = karnof / 100
)
ACTG175$karnof_b <- ACTG175 %>%
mutate(
age_months = age * 12,
karnof_b = karnof / 100
)
head(ACTG175)
ACTG175 <- ACTG175 %>%
arrange(age)
ACTG175
head(ACTG175 %>%
arrange(age))
ACTG175 <- ACTG175 %>%
arrange(age)
head(ACTG175)
library(dplyr)
library(speff2trial)
head(ACTG175 %>%
arrange(age))
ACTG175 <- ACTG175 %>%
arrange(age)
